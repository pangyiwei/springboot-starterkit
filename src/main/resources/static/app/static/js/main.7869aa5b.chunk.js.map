{"version":3,"sources":["assets/signin-image.jpg","assets/signup-image.jpg","assets/bus.png","assets/bus2.jpg","appColors.ts","theme.ts","services/ApiService.ts","services/AuthService.ts","services/DependencyInjector.tsx","routes/Login/LoginPage.tsx","routes/SignUp/SignUpPage.tsx","routes/AuthRoute.tsx","routes/Booking/BookingSearchComponent.tsx","routes/Booking/BookingListComponent.tsx","services/SidebarService.ts","routes/Booking/BookingPage.tsx","routes/Schedule/SchedulePage.tsx","routes/Router.tsx","components/Appbar.tsx","components/Sidebar.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","AppColors","background","blue","tealBlue","theme","createMuiTheme","palette","paper","primary","main","secondary","text","typography","h2","fontSize","fontWeight","marginBottom","h3","h6","body1","subtitle1","color","subtitle2","ApiService","email","password","firstName","lastName","mobileNumber","axios","method","url","baseUrl","data","headers","post","then","res","console","log","token","get","sourceStop","destinationStop","tripDate","tripID","AuthService","user","exp","cachedToken","localStorage","getItem","decoded","jsonwebtoken","decode","Date","getTime","this","sub","clear","update","currTime","length","login","response","status","authorization","split","setItem","Promise","reject","message","DependencyContext","React","createContext","dependencies","DependencyProvider","props","getDependency","dependency","state","id","setState","forEach","Dep","idx","undefined","toString","dep","dispose","Provider","value","children","Component","useDependency","useContext","useStyles","makeStyles","container","backgroundColor","borderRadius","textField","signUpBtn","error","LoginPage","classes","history","useHistory","authService","useState","setEmail","setPassword","setError","useEffect","isAuthenticated","push","handleLogin","a","Box","mx","my","maxWidth","width","className","boxShadow","display","flexDirection","alignItems","m","Typography","variant","justifyContent","src","signInImage","alt","noValidate","autoComplete","TextField","fullWidth","label","onChange","e","target","type","Button","onClick","SignUpPage","setFirstName","setLastName","setMobileNumber","dialog","setDialog","handleSignUp","isEmail","signUp","handleCloseDialog","str","test","signUpImage","Dialog","open","onClose","DialogTitle","DialogContent","DialogContentText","DialogActions","AuthRoute","to","BookingSearchComponent","stopsMenuItems","stops","map","stop","MenuItem","key","code","name","detail","padding","flexWrap","flex","InputLabel","Select","handleSourceChange","input","Input","handleDestinationChange","utils","DateFnsUtils","clearable","date","placeholder","setDate","format","handleSearch","tripContainer","tripCard","height","tripMedia","tripActions","BookingListComponent","trips","trip","minWidth","margin","Card","CardMedia","image","availableSeats","busImage","bus2Image","title","CardContent","journeyTime","fare","CardActions","size","handleBook","tripId","SidebarService","show","selected","BookingPage","setStops","currentDate","moment","year","getFullYear","month","getMonth","getDate","setSourceStop","setDestinationStop","setTrips","sidebarService","currentTarget","getToken","bookTrip","result","getTripSchedules","payload","setSelected","getStops","init","ticketCard","marginTop","SchedulePage","tickets","setTickets","getTrips","ticketCards","ticket","CardHeader","subheader","journeyDate","passengerName","passengerMobileNumber","busCode","seatNumber","Router","path","menuIcon","Appbar","AppBar","position","Toolbar","Hidden","smUp","implementation","IconButton","toggle","flexGrow","paddingTop","Sidebar","mobileOpen","getUser","drawer","List","ListItem","Avatar","charAt","toUpperCase","button","close","ListItemIcon","ListItemText","Divider","logout","Drawer","anchor","ModalProps","keepMounted","xsDown","App","ThemeProvider","basename","process","overflow","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.7869aa5b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/signin-image.d586706c.jpg\";","module.exports = __webpack_public_path__ + \"static/media/signup-image.75eb7c4e.jpg\";","module.exports = __webpack_public_path__ + \"static/media/bus.fb52abb7.png\";","module.exports = __webpack_public_path__ + \"static/media/bus2.a564af4e.jpg\";","const AppColors = {\r\n    background: \"#f8f8f8\",\r\n    blue: \"#1e88e5\",\r\n    tealBlue: \"#26c6da\"\r\n}\r\n\r\nexport default AppColors;","import { createMuiTheme, Theme } from '@material-ui/core';\r\nimport AppColors from './appColors';\r\n\r\nconst theme: Theme = createMuiTheme({\r\n    palette: {\r\n        background: {\r\n            paper: AppColors.background\r\n        },\r\n        primary: {\r\n            main: AppColors.blue\r\n        },\r\n        secondary: {\r\n            main: AppColors.tealBlue\r\n        },\r\n        text: {\r\n            primary: \"#000\"\r\n        }\r\n    },\r\n    typography: {\r\n        h2: {\r\n            fontSize: \"36px\",\r\n            fontWeight: 800,\r\n            marginBottom: \"12px\"\r\n        },\r\n        h3: {\r\n            fontSize: \"21px\",\r\n            fontWeight: 400\r\n        },\r\n        h6: {\r\n            fontSize: \"14px\",\r\n            fontWeight: 400\r\n        },\r\n        body1: {\r\n            fontSize: \"15px\",\r\n            fontWeight: 400\r\n        },\r\n        subtitle1: {\r\n            fontSize: \"14px\",\r\n            fontWeight: 400,\r\n            color: \"#99abb4\"\r\n        },\r\n        subtitle2: {\r\n            fontSize: \"12px\",\r\n            fontWeight: 400,\r\n            color: \"#99abb4\"\r\n        }\r\n    }\r\n});\r\n\r\nexport default theme;","import axios from \"axios\";\r\n\r\nconst baseUrl = process.env.REACT_APP_API_URI;\r\n\r\nexport class ApiService {\r\n\r\n    static signUp(email: string, password: string, firstName: string, lastName: string, mobileNumber: string) {\r\n        const url = baseUrl + '/v1/user/signup';\r\n        return axios({\r\n            method: \"post\",\r\n            url: url,\r\n            data: {\r\n                email,\r\n                password,\r\n                firstName,\r\n                lastName,\r\n                mobileNumber\r\n            },\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        });\r\n    }\r\n\r\n    static login(email: string, password: string) {\r\n        const url = baseUrl + '/auth';\r\n        return axios.post(url, {\r\n            email,\r\n            password\r\n        }).then(res => {\r\n            console.log(res);\r\n            return(res);\r\n        });\r\n    }\r\n\r\n    static getStops(token: string) {\r\n        const url = baseUrl + \"/v1/reservation/stops\";\r\n        return axios.get(url, {\r\n            headers: {\r\n                \"Authorization\": \"Bearer \" + token\r\n            }\r\n        });\r\n    }\r\n\r\n    static getTripSchedules(token: string, sourceStop: string, destinationStop: string, tripDate: string) {\r\n        const url = baseUrl + \"/v1/reservation/tripschedules\";\r\n        return axios.post(url, {\r\n            sourceStop,\r\n            destinationStop,\r\n            tripDate\r\n        }, {\r\n            headers: {\r\n                \"Authorization\": \"Bearer \" + token\r\n            }\r\n        });\r\n    }\r\n\r\n    static bookTrip(token: string, tripID: string, tripDate: string) {\r\n        const url = baseUrl + \"/v1/reservation/bookticket\";\r\n        return axios.post(url, {\r\n            tripID,\r\n            tripDate\r\n        }, {\r\n            headers: {\r\n                \"Authorization\": \"Bearer \" + token\r\n            }\r\n        });\r\n    }\r\n\r\n    static getTrips(token: string) {\r\n        const url = baseUrl + \"/v1/reservation/tickets\";\r\n        return axios.get(url, {\r\n            headers: {\r\n                \"Authorization\": \"Bearer \" + token\r\n            }\r\n        });\r\n    }\r\n}","import { ApiService } from \"./ApiService\";\r\nimport jsonwebtoken from 'jsonwebtoken';\r\n\r\nexport default class AuthService {\r\n    token: string = \"\";\r\n    user: string = \"\";\r\n    exp: number = 0;\r\n\r\n    update() { }\r\n\r\n    constructor() {\r\n        const cachedToken = localStorage.getItem(\"brs_jwt\");\r\n\r\n        if (cachedToken) {    \r\n            const decoded = jsonwebtoken.decode(cachedToken);\r\n            console.log(decoded);\r\n            const currTime = new Date().getTime();\r\n            if (currTime < decoded.exp * 1000) {\r\n                this.token = cachedToken;\r\n                this.user = decoded.sub;\r\n                this.exp = decoded.exp;\r\n            } else {\r\n                localStorage.clear();\r\n            }\r\n            this.update();\r\n        }\r\n    }\r\n\r\n    isAuthenticated() {\r\n        // return true;\r\n        const currTime = new Date().getTime();\r\n        return this.token.length > 0 && currTime <= this.exp * 1000;\r\n    }\r\n\r\n    getToken() {\r\n        return this.token;\r\n    }\r\n\r\n    getUser(): string {\r\n        return this.user;\r\n    }\r\n\r\n    async login(email: string, password: string) {\r\n        return ApiService.login(email, password).then(response => {\r\n            console.log(response);\r\n            if (response.status === 200 && response.headers.authorization) {\r\n                const token = response.headers.authorization.split(' ')[1];\r\n                this.token = token;\r\n                localStorage.setItem(\"brs_jwt\", token);\r\n                const decoded = jsonwebtoken.decode(token);\r\n                console.log(decoded);\r\n                this.user = decoded.sub;\r\n                this.exp = decoded.exp;\r\n\r\n                this.update();\r\n                return (true);\r\n            } else {\r\n                return (Promise.reject({ message: \"Email or Password Incorrect\" }))\r\n            }\r\n        })\r\n    }\r\n\r\n    logout() {\r\n        this.token = \"\";\r\n        localStorage.clear();\r\n        this.update();\r\n    }\r\n}","import React from 'react';\r\n\r\nexport class BaseDependency {\r\n  static id: any;\r\n  update: any;\r\n  dispose: any;\r\n  getDependency: any;\r\n}\r\n\r\nconst defaultDependencies = {\r\n  dependencies: {}\r\n};\r\n\r\ninterface IProps {\r\n    dependencies: any;\r\n}\r\n\r\ninterface IState {\r\n    dependencies: any;\r\n}\r\n\r\nconst DependencyContext = React.createContext(defaultDependencies);\r\n\r\nexport default class DependencyProvider extends React.Component<IProps, IState> {\r\n  constructor(props: IProps) {\r\n    super(props);\r\n\r\n    const dependencies: any = {};\r\n    props.dependencies.forEach((Dep: any, idx: number) => {\r\n      if (Dep.id === undefined || Dep.id === null) {\r\n        Dep.id = idx.toString();\r\n      }\r\n      dependencies[Dep.id] = new Dep();\r\n      dependencies[Dep.id].update = this.update;\r\n    });\r\n\r\n    this.state = { dependencies };\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.state.dependencies.forEach((dep: any) => dep.dispose());\r\n  }\r\n\r\n  getDependency = (dependency: any) => {\r\n    return this.state.dependencies[dependency.id];\r\n  };\r\n\r\n  update = () => {\r\n    // Force a re-render in all dependents, by manually informing them of a state change\r\n    this.setState({});\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <DependencyContext.Provider value={this.state}>\r\n        {this.props.children}\r\n      </DependencyContext.Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport const useDependency = (dependency: any) => {\r\n  const state: any = React.useContext(DependencyContext);\r\n  // // console.log(state);\r\n  return state.dependencies[dependency.id];\r\n};\r\n","import React from 'react'\r\nimport { Box, makeStyles, Typography, TextField, Button } from '@material-ui/core'\r\nimport signInImage from '../../assets/signin-image.jpg';\r\nimport AppColors from '../../appColors';\r\nimport { useHistory } from 'react-router-dom';\r\nimport AuthService from '../../services/AuthService';\r\nimport { useDependency } from '../../services/DependencyInjector';\r\n\r\nconst useStyles = makeStyles({\r\n    container: {\r\n        backgroundColor: \"#fff\",\r\n        borderRadius: \"20px\"\r\n    },\r\n    textField: {\r\n        marginBottom: '16px'\r\n    },\r\n    signUpBtn: {\r\n        color: AppColors.blue\r\n    },\r\n    error: {\r\n        color: '#DD0000'\r\n    }\r\n})\r\n\r\nconst LoginPage: React.FC = () => {\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n    const authService = useDependency(AuthService);\r\n    const [email, setEmail] = React.useState(\"\");\r\n    const [password, setPassword] = React.useState(\"\");\r\n    const [error, setError] = React.useState(\"\");\r\n\r\n    React.useEffect(() => {\r\n        if (authService.isAuthenticated()) {\r\n            history.push('/');\r\n        }\r\n    }, [])\r\n\r\n    const handleSignUp = () => {\r\n        history.push('/signup');\r\n    }\r\n\r\n    const handleLogin = async () => {\r\n        try {\r\n            const result = await authService.login(email, password);\r\n            if (result) {\r\n                history.push('/booking');\r\n            }\r\n        } catch (err) {\r\n            console.log(err);\r\n            setError(err.message);\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <Box mx=\"auto\" my=\"64px\" maxWidth=\"400px\" width=\"95%\" className={classes.container} boxShadow={3} display=\"flex\" flexDirection=\"column\" alignItems=\"center\">\r\n            <Box m=\"32px\">\r\n                <Typography variant=\"h2\">\r\n                    Login\r\n                </Typography>\r\n\r\n                <Box display=\"flex\" flexDirection=\"column\" alignItems=\"center\" justifyContent=\"center\">\r\n                    <img src={signInImage} alt=\"signin\" width=\"150px\" />\r\n                </Box>\r\n\r\n                <form noValidate autoComplete=\"off\">\r\n                    <Box marginBottom=\"24px\">\r\n                        <TextField fullWidth id=\"email\" label=\"Email\" className={classes.textField} value={email} onChange={e => setEmail(e.target.value)} />\r\n                        <TextField fullWidth id=\"password\" label=\"Password\" type=\"password\" className={classes.textField} value={password} onChange={e => setPassword(e.target.value)} />\r\n                    </Box>\r\n                    <Box id=\"error\" display=\"flex\" alignItems=\"center\" justifyContent=\"center\">\r\n                        <Typography variant=\"body1\" className={classes.error}>\r\n                            {error}\r\n                        </Typography>\r\n                    </Box>\r\n                    <Button id=\"login\" variant=\"contained\" color=\"primary\" fullWidth onClick={handleLogin} >Login</Button>\r\n                    <Box width=\"100%\" display=\"flex\" alignItems=\"center\" justifyContent=\"center\" my=\"8px\">\r\n                        <Typography variant=\"subtitle2\">\r\n                            OR\r\n                        </Typography>\r\n                    </Box>\r\n                    <Button id=\"signup\" fullWidth className={classes.signUpBtn} onClick={handleSignUp}>Sign Up</Button>\r\n                </form>\r\n            </Box>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default LoginPage\r\n","import React from 'react'\r\nimport { Box, Typography, TextField, Button, makeStyles, Dialog, DialogContent, DialogActions, DialogTitle, DialogContentText } from '@material-ui/core'\r\nimport signUpImage from '../../assets/signup-image.jpg';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { ApiService } from '../../services/ApiService';\r\nimport { useDependency } from '../../services/DependencyInjector';\r\nimport AuthService from '../../services/AuthService';\r\n\r\nconst useStyles = makeStyles({\r\n    container: {\r\n        backgroundColor: \"#fff\",\r\n        borderRadius: \"20px\"\r\n    },\r\n    textField: {\r\n        marginBottom: '16px'\r\n    },\r\n    error: {\r\n        color: '#DD0000'\r\n    }\r\n})\r\n\r\nconst SignUpPage = () => {\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n    const [email, setEmail] = React.useState(\"\");\r\n    const [password, setPassword] = React.useState(\"\");\r\n    const [firstName, setFirstName] = React.useState(\"\");\r\n    const [lastName, setLastName] = React.useState(\"\");\r\n    const [mobileNumber, setMobileNumber] = React.useState(\"\");\r\n    const [error, setError] = React.useState(\"\");\r\n    const [dialog, setDialog] = React.useState(false);\r\n    const authService = useDependency(AuthService);\r\n\r\n    React.useEffect(() => {\r\n        if (authService.isAuthenticated()) {\r\n            history.push('/');\r\n        }\r\n    }, [])\r\n\r\n    const handleAlreadyRegistered = () => {\r\n        history.push('/login');\r\n    }\r\n\r\n    const handleSignUp = async () => {\r\n        if (email.length < 1) {\r\n            setError(\"Email is required\");\r\n            return;\r\n        } else if (!isEmail(email)) {\r\n            setError(\"Email is of the wrong format\");\r\n            return;\r\n        } else if (password.length < 1) {\r\n            setError(\"Password is required\");\r\n            return;\r\n        } else if (firstName.length < 1) {\r\n            setError(\"First Name is required\");\r\n            return;\r\n        } else if (lastName.length < 1) {\r\n            setError(\"Last Name is required\");\r\n            return;\r\n        } else {\r\n            setError(\"\");\r\n        }\r\n\r\n        try {\r\n            const response = await ApiService.signUp(email, password, firstName, lastName, mobileNumber);\r\n            if (response.status === 200) {\r\n                setDialog(true);\r\n            }\r\n        } catch (err) {\r\n            console.log(err);\r\n            setError(err.message);\r\n        }\r\n    }\r\n\r\n    const handleCloseDialog = () => {\r\n        history.push('/login');\r\n    }\r\n\r\n\r\n    const isEmail = (str: string) => {\r\n        const emailRegex = /^(([^<>()\\[\\]\\.,;:\\s@\\\"]+(\\.[^<>()\\[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i;\r\n        return emailRegex.test(str);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Box mx=\"auto\" my=\"64px\" maxWidth=\"400px\" width=\"95%\" className={classes.container} boxShadow={3} display=\"flex\" flexDirection=\"column\" alignItems=\"center\">\r\n                <Box m=\"32px\">\r\n                    <Typography variant=\"h2\">\r\n                        Sign Up\r\n                </Typography>\r\n\r\n                    <Box display=\"flex\" flexDirection=\"column\" alignItems=\"center\" justifyContent=\"center\">\r\n                        <img src={signUpImage} alt=\"signin\" width=\"150px\" />\r\n                    </Box>\r\n\r\n                    <form noValidate autoComplete=\"off\">\r\n                        <Box marginBottom=\"24px\">\r\n                            <TextField fullWidth id=\"email\" label=\"Email\" className={classes.textField} onChange={e => setEmail(e.target.value)} value={email} />\r\n                            <TextField fullWidth id=\"password\" label=\"Password\" type=\"password\" className={classes.textField} onChange={e => setPassword(e.target.value)} value={password} />\r\n                            <TextField fullWidth id=\"firstName\" label=\"First Name\" className={classes.textField} onChange={e => setFirstName(e.target.value)} value={firstName} />\r\n                            <TextField fullWidth id=\"lastName\" label=\"Last Name\" className={classes.textField} onChange={e => setLastName(e.target.value)} value={lastName} />\r\n                            <TextField fullWidth id=\"mobileNumber\" label=\"Mobile Number\" className={classes.textField} onChange={e => setMobileNumber(e.target.value)} value={mobileNumber} />\r\n                        </Box>\r\n\r\n                        <Box id=\"error\" display=\"flex\" alignItems=\"center\" justifyContent=\"center\">\r\n                            <Typography variant=\"body1\" className={classes.error}>\r\n                                {error}\r\n                            </Typography>\r\n                        </Box>\r\n\r\n                        <Button id=\"signup\" variant=\"contained\" color=\"primary\" fullWidth onClick={handleSignUp}>Sign Up</Button>\r\n                        <Box width=\"100%\" display=\"flex\" alignItems=\"center\" justifyContent=\"center\" my=\"8px\">\r\n                        </Box>\r\n                        <Button id=\"returnToLogin\" fullWidth onClick={handleAlreadyRegistered}>Already Registered?</Button>\r\n                    </form>\r\n                </Box>\r\n            </Box>\r\n            <Dialog\r\n                open={dialog}\r\n                onClose={handleCloseDialog}\r\n            >\r\n                <DialogTitle id=\"alert-dialog-title\">{\"Success\"}</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText id=\"alert-dialog-description\">\r\n                        Your account has been created. You can now log in with the given email and password.\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleCloseDialog} color=\"primary\">\r\n                        Close\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SignUpPage\r\n","import React from 'react'\r\nimport { Route, Redirect } from 'react-router-dom'\r\nimport { useDependency } from '../services/DependencyInjector'\r\nimport AuthService from '../services/AuthService'\r\n\r\nconst AuthRoute = (props: any) => {\r\n    const authService = useDependency(AuthService);\r\n\r\n    if (authService.isAuthenticated()) {\r\n        return <Route {...props} />\r\n    } else {\r\n        return <Redirect to=\"/login\" />\r\n    }\r\n}\r\n\r\nexport default AuthRoute;","import React from 'react'\r\nimport { Box, makeStyles, Typography, Select, InputLabel, MenuItem, Button, Input } from '@material-ui/core'\r\nimport DateFnsUtils from '@date-io/moment';\r\nimport { KeyboardDatePicker, MuiPickersUtilsProvider } from '@material-ui/pickers';\r\n\r\nconst useStyles = makeStyles({\r\n    container: {\r\n        backgroundColor: \"#F8F8F8\",\r\n        borderRadius: \"8px\"\r\n    },\r\n    error: {\r\n        color: \"#DD0000\"\r\n    }\r\n})\r\n\r\ninterface Iprops {\r\n    stops: any;\r\n    handleSearch: () => void;\r\n    sourceStop: string;\r\n    destinationStop: string;\r\n    date: any;\r\n    handleSourceChange: (e:any) => void;\r\n    handleDestinationChange: (e:any) => void;\r\n    setDate: (e:any) => void;\r\n    error: string\r\n}\r\n\r\nconst BookingSearchComponent = (props: Iprops) => {\r\n    const classes = useStyles();\r\n    const stopsMenuItems = props.stops.map((stop: any) => <MenuItem key={stop.code} value={stop.code}>{stop.name + \" - \" + stop.detail}</MenuItem>)\r\n\r\n    return (\r\n        <Box className={classes.container} padding=\"24px\" boxShadow={1}>\r\n            <Typography variant=\"h3\">\r\n                Search For Trips\r\n            </Typography>\r\n\r\n            <Box my=\"24px\">\r\n                <Typography variant=\"h6\">\r\n                    Select Start Point and Destination:\r\n                </Typography>\r\n            </Box>\r\n\r\n            <Box display=\"flex\" flexDirection=\"row\" flexWrap=\"wrap\">\r\n                <Box flex=\"300px 1 1\" padding=\"8px\">\r\n                    <InputLabel>Start</InputLabel>\r\n                    <Select\r\n                        fullWidth\r\n                        value={props.sourceStop}\r\n                        onChange={props.handleSourceChange}\r\n                        input={(<Input id=\"sourceStop\" />)}\r\n                    >\r\n                        {stopsMenuItems}\r\n                    </Select>\r\n                </Box>\r\n                <Box flex=\"300px 1 1\" padding=\"8px\">\r\n                    <InputLabel>End</InputLabel>\r\n                    <Select\r\n                        fullWidth\r\n                        value={props.destinationStop}\r\n                        onChange={props.handleDestinationChange}\r\n                        input={(<Input id=\"destinationStop\" />)}\r\n                    >\r\n                        {stopsMenuItems}\r\n                    </Select>\r\n                </Box>\r\n                <Box padding=\"8px\" flex=\"300px 1 1\">\r\n                    <InputLabel>Date</InputLabel>\r\n                    <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                        <KeyboardDatePicker\r\n                            fullWidth\r\n                            clearable\r\n                            value={props.date}\r\n                            placeholder=\"YYYY-MM-DD\"\r\n                            onChange={props.setDate}\r\n                            format=\"YYYY-MM-DD\"\r\n                            id=\"tripDate\"\r\n                        />\r\n                    </MuiPickersUtilsProvider>\r\n                </Box>\r\n            </Box>\r\n            <Box display=\"flex\" alignItems=\"center\" justifyContent=\"center\" my=\"8px\">\r\n                <Typography variant=\"body1\" className={classes.error}>\r\n                    {props.error}\r\n                </Typography>\r\n            </Box>\r\n            <Box display=\"flex\" justifyContent=\"flex-end\" my=\"16px\">\r\n                <Button variant=\"contained\" color=\"primary\" onClick={props.handleSearch}>Search</Button>\r\n            </Box>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default BookingSearchComponent\r\n","import React from 'react'\r\nimport { Box, makeStyles, Card, CardMedia, CardContent, Typography, CardActions, Button } from '@material-ui/core'\r\nimport busImage from '../../assets/bus.png';\r\nimport bus2Image from '../../assets/bus2.jpg';\r\n\r\nconst useStyles = makeStyles({\r\n    tripContainer: {\r\n        backgroundColor: \"#f8f8f8\",\r\n        borderRadius: \"8px\"\r\n    },\r\n    tripCard: {\r\n        width: \"100%\",\r\n        height: \"100%\"\r\n    },\r\n    tripMedia: {\r\n        height: \"140px\"\r\n    },\r\n    tripActions: {\r\n        justifyContent: \"flex-end\"\r\n    }\r\n})\r\n\r\ninterface Iprops {\r\n    trips: any;\r\n    handleBook: (e:any) => void;\r\n}\r\n\r\nconst BookingListComponent = (props: Iprops) => {\r\n    const classes = useStyles();\r\n    const arr = [1, 2, 3, 4, 5, 6, 7, 8, 9];\r\n\r\n    const trips = props.trips.map(trip => (\r\n        <Box key={trip.id} id={trip.id} flex=\"1 1 30%\" minWidth=\"300px\" margin=\"8px\">\r\n            <Card className={classes.tripCard}>\r\n                <CardMedia\r\n                    image={trip.availableSeats>12?busImage:bus2Image}\r\n                    title=\"Bus\"\r\n                    className={classes.tripMedia}\r\n                />\r\n                <CardContent>\r\n                    <Typography variant=\"body1\">\r\n                        Journey: {trip.sourceStop} - {trip.destinationStop}\r\n                    </Typography>\r\n                    <Typography variant=\"body1\">\r\n                        Available Seats: {trip.availableSeats}\r\n                    </Typography>\r\n                    <Typography variant=\"body1\">\r\n                        Journey Time: {trip.journeyTime}\r\n                    </Typography>\r\n                    <Typography variant=\"body1\">\r\n                        Fare: ${trip.fare}\r\n                    </Typography>\r\n                </CardContent>\r\n                <CardActions className={classes.tripActions}>\r\n                    <Button size=\"small\" color=\"primary\" onClick={props.handleBook} id={trip.tripId+\"-button\"}>\r\n                        Book\r\n                    </Button>\r\n                </CardActions>\r\n            </Card>\r\n        </Box>\r\n    ));\r\n\r\n    return (\r\n        <Box display=\"flex\" flexDirection=\"row\" flexWrap=\"wrap\" my=\"16px\" justifyContent=\"space-around\">\r\n            {trips}\r\n            <Box flex=\"1 1 30%\" minWidth=\"300px\" margin=\"8px\"></Box>\r\n            <Box flex=\"1 1 30%\" minWidth=\"300px\" margin=\"8px\"></Box>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default BookingListComponent\r\n","export class SidebarService {\r\n    show: boolean = false;\r\n    selected: string = \"\";\r\n\r\n    update() {}\r\n    \r\n    open() {\r\n        this.show = true;\r\n        this.update();\r\n    }\r\n\r\n    close() {\r\n        this.show = false;\r\n        this.update()\r\n    }\r\n    \r\n    toggle() {\r\n        this.show = !this.show;\r\n        this.update();\r\n    }\r\n\r\n    setSelected(selected) {\r\n        this.selected = selected;\r\n        this.update();\r\n    }\r\n}","import React from 'react'\r\nimport { Box, Dialog, DialogTitle, DialogContent, DialogContentText, DialogActions, Button } from '@material-ui/core'\r\nimport BookingSearchComponent from './BookingSearchComponent'\r\nimport { ApiService } from '../../services/ApiService'\r\nimport { useDependency } from '../../services/DependencyInjector'\r\nimport AuthService from '../../services/AuthService'\r\nimport moment from 'moment';\r\nimport BookingListComponent from './BookingListComponent'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { SidebarService } from '../../services/SidebarService'\r\n\r\nconst BookingPage: React.FC = () => {\r\n    const authService = useDependency(AuthService);\r\n    const [stops, setStops] = React.useState([]);\r\n    const currentDate = new Date();\r\n    const [date, setDate] = React.useState(moment().year(currentDate.getFullYear()).month(currentDate.getMonth()).date(currentDate.getDate()));\r\n    const [sourceStop, setSourceStop] = React.useState(\"\");\r\n    const [destinationStop, setDestinationStop] = React.useState(\"\");\r\n    const [error, setError] = React.useState(\"\");\r\n    const [trips, setTrips] = React.useState([]);\r\n    const [dialog, setDialog] = React.useState(false);\r\n    const history = useHistory();\r\n    const sidebarService = useDependency(SidebarService);\r\n    \r\n    const handleCloseDialog = () => {\r\n        setDialog(false);\r\n        history.push('/schedule');\r\n    }\r\n\r\n    const handleBook = async (e) => {\r\n        const tripId = e.currentTarget.id.split('-')[0];\r\n        console.log(tripId);\r\n        try {\r\n            const token = authService.getToken();\r\n            // const token = \"eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJ0ZXN0QHRlc3QuY29tIiwicm9sZXMiOlsiUEFTU0VOR0VSIl0sImV4cCI6MTU4NjkxNzgwNX0.CsAAuSsswKiUIDeyi9k7t3_abJ3TMP4fvnBDOd0X5Xd-P4Mw6dhwZB2E0q5JQ6vl0UG41IcaMXLln1mRN5QM1A\";\r\n            const result = await ApiService.bookTrip(token, tripId, date.format(\"YYYY-MM-DD\"));\r\n            console.log(result);\r\n            setDialog(true);\r\n        } catch(err) {\r\n            console.log(err);\r\n        }\r\n    }\r\n\r\n    const handleSearch = async () => {\r\n        if (sourceStop === destinationStop) {\r\n            setError(\"Source and Destination Stop Cannot be the same\");\r\n            return;\r\n        }\r\n\r\n        try {\r\n            const token = authService.getToken();\r\n            const result = await ApiService.getTripSchedules(token, sourceStop, destinationStop, date.format(\"YYYY-MM-DD\"));\r\n            console.log(result);\r\n            if (result.data.payload) {\r\n                setTrips(result.data.payload);\r\n            } else {\r\n                setTrips([]);\r\n                setError(\"No trips found\")\r\n            }\r\n        } catch {\r\n\r\n        }\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        sidebarService.setSelected('booking');\r\n        const init = async () => {\r\n            try {\r\n                const token = authService.getToken();\r\n                const result = await ApiService.getStops(token);\r\n                setStops(result.data.payload);\r\n                setSourceStop(result.data.payload[0].code)\r\n                setDestinationStop(result.data.payload[0].code)\r\n                console.log(result);\r\n            } catch (err) {\r\n                console.log(err);\r\n            }\r\n        }\r\n        init();\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            <Box padding=\"16px\">\r\n                <BookingSearchComponent\r\n                    stops={stops}\r\n                    handleSearch={handleSearch}\r\n                    sourceStop={sourceStop}\r\n                    destinationStop={destinationStop}\r\n                    date={date}\r\n                    handleSourceChange={(e) => { setSourceStop(e.target.value) }}\r\n                    handleDestinationChange={(e) => { setDestinationStop(e.target.value) }}\r\n                    setDate={e => { setDate(e) }}\r\n                    error={error}\r\n                />\r\n                <BookingListComponent trips={trips} handleBook={handleBook} />\r\n            </Box>\r\n            <Dialog\r\n                open={dialog}\r\n                onClose={handleCloseDialog}\r\n            >\r\n                <DialogTitle id=\"alert-dialog-title\">{\"Ticket Booked Success\"}</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText id=\"alert-dialog-description\">\r\n                       Ticket Booked Successfully. Press OK to continue.\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleCloseDialog} color=\"primary\">\r\n                        OK\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default BookingPage\r\n","import React from 'react'\r\nimport { Box, Typography, Card, CardHeader, CardContent } from '@material-ui/core'\r\nimport { ApiService } from '../../services/ApiService'\r\nimport { makeStyles } from '@material-ui/styles'\r\nimport moment from 'moment';\r\nimport QRCode from 'qrcode.react';\r\nimport { useDependency } from '../../services/DependencyInjector';\r\nimport { SidebarService } from '../../services/SidebarService';\r\nimport AuthService from '../../services/AuthService';\r\n\r\nconst useStyles = makeStyles({\r\n    ticketCard: {\r\n        width: \"100%\",\r\n        marginTop: \"12px\",\r\n        marginBottom: \"12px\"\r\n    }\r\n});\r\n\r\nconst SchedulePage = () => {\r\n    const classes = useStyles();\r\n    const [tickets, setTickets] = React.useState([]);\r\n    const sidebarService = useDependency(SidebarService);\r\n    const authService = useDependency(AuthService);\r\n\r\n    React.useEffect(() => {\r\n        sidebarService.setSelected('schedule');\r\n        const init = async () => {\r\n            try {\r\n                const token = authService.getToken();\r\n                // const token = \"eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJ0ZXN0QHRlc3QuY29tIiwicm9sZXMiOlsiUEFTU0VOR0VSIl0sImV4cCI6MTU4NjkxNzgwNX0.CsAAuSsswKiUIDeyi9k7t3_abJ3TMP4fvnBDOd0X5Xd-P4Mw6dhwZB2E0q5JQ6vl0UG41IcaMXLln1mRN5QM1A\";\r\n                const result = await ApiService.getTrips(token);\r\n                setTickets(result.data.payload);\r\n                console.log(result);\r\n            } catch (err) {\r\n                console.log(err)\r\n            }\r\n        }\r\n        init();\r\n    }, [])\r\n\r\n    const ticketCards = tickets.map(ticket => (\r\n        <Card className={classes.ticketCard} key={ticket.id}>\r\n            <CardHeader\r\n                title={ticket.sourceStop + \" to \" + ticket.destinationStop}\r\n                subheader={\"Trip Date: \" + moment(ticket.journeyDate, \"YYYY-MM-DD\").format(\"D MMM YYYY\")}\r\n            />\r\n            <CardContent>\r\n                <Box display=\"flex\" flexDirection=\"row\" justifyContent=\"space-between\">\r\n                    <Box>\r\n                        <Typography variant=\"body1\">\r\n                            Passenger: {ticket.passengerName}\r\n                        </Typography>\r\n                        <Typography variant=\"body1\">\r\n                            Passenger Contact: {ticket.passengerMobileNumber}\r\n                        </Typography>\r\n                        <Typography variant=\"body1\">\r\n                            Bus ID: {ticket.busCode}\r\n                        </Typography>\r\n                        <Typography variant=\"body1\">\r\n                            Seat Number: {ticket.seatNumber}\r\n                        </Typography>\r\n                    </Box>\r\n                    <Box>\r\n                        <QRCode value={ticket.id} size={96}/>\r\n                    </Box>\r\n                </Box>\r\n            </CardContent>\r\n        </Card>\r\n    ))\r\n\r\n    return (\r\n        <Box padding=\"16px\">\r\n            <Typography variant=\"h3\">My Schedule</Typography>\r\n            <Typography variant=\"subtitle1\">Your tickets can be found here</Typography>\r\n\r\n            {ticketCards}\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default SchedulePage\r\n","import React from 'react'\r\nimport { BrowserRouter, Switch, Route, Redirect } from 'react-router-dom'\r\nimport LoginPage from './Login/LoginPage'\r\nimport SignUpPage from './SignUp/SignUpPage'\r\nimport AuthRoute from './AuthRoute'\r\nimport BookingPage from './Booking/BookingPage'\r\nimport SchedulePage from './Schedule/SchedulePage'\r\n\r\nconst Router = () => {\r\n    return (\r\n        <Switch>\r\n            <Route path=\"/login\">\r\n                <LoginPage />\r\n            </Route>\r\n            <Route path=\"/signup\">\r\n                <SignUpPage />\r\n            </Route>\r\n            <AuthRoute path=\"/booking\">\r\n                <BookingPage />\r\n            </AuthRoute>\r\n            <AuthRoute path=\"/schedule\">\r\n                <SchedulePage />\r\n            </AuthRoute>\r\n            <Route path='/'>\r\n                <Redirect to='/booking' />\r\n            </Route>\r\n        </Switch>\r\n    )\r\n}\r\n\r\nexport default Router\r\n","import React from 'react'\r\nimport { AppBar, Toolbar, Box, Button, IconButton, makeStyles, Hidden } from '@material-ui/core'\r\nimport AuthService from '../services/AuthService'\r\nimport { useDependency } from '../services/DependencyInjector'\r\nimport MenuIcon from '@material-ui/icons/Menu'\r\nimport { SidebarService } from '../services/SidebarService'\r\n\r\nconst useStyles = makeStyles({\r\n    menuIcon: {\r\n        color: \"white\"\r\n    }\r\n})\r\n\r\nconst Appbar: React.FC = () => {\r\n    const classes = useStyles();\r\n    const authService = useDependency(AuthService);\r\n    const sidebarService = useDependency(SidebarService);\r\n\r\n    return (\r\n        authService.isAuthenticated() && \r\n        (<AppBar position=\"static\">\r\n            <Toolbar>\r\n                <Hidden smUp implementation=\"js\">\r\n                    <IconButton onClick={()=>{sidebarService.toggle()}}>\r\n                        <MenuIcon className={classes.menuIcon}/>\r\n                    </IconButton>\r\n                </Hidden>\r\n                <Box mx={\"16px\"} flexGrow={1}>\r\n                    Bus Reservation System\r\n                    </Box>\r\n                <Box mx={\"16px\"}>\r\n                    {/* <Button>\r\n                        User\r\n                    </Button> */}\r\n                </Box>\r\n            </Toolbar>\r\n        </AppBar>)\r\n    )\r\n}\r\n\r\nexport default Appbar\r\n","import React from 'react'\r\nimport { Box, makeStyles, Hidden, Drawer, Typography, List, ListItem, ListItemIcon, ListItemText, Divider, Avatar } from '@material-ui/core'\r\nimport { useDependency } from '../services/DependencyInjector';\r\nimport AuthService from '../services/AuthService';\r\nimport TodayIcon from '@material-ui/icons/Today';\r\nimport DirectionsBusIcon from '@material-ui/icons/DirectionsBus';\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { SidebarService } from '../services/SidebarService';\r\n\r\nconst useStyles = makeStyles({\r\n    container: {\r\n        backgroundColor: \"#f8f8f8\",\r\n        width: \"300px\",\r\n        height: \"100%\",\r\n        paddingTop: \"24px\"\r\n    },\r\n    text: {\r\n        color: \"#67757c\"\r\n    }\r\n})\r\n\r\nconst Sidebar = () => {\r\n    const sidebarService = useDependency(SidebarService);\r\n    const mobileOpen = sidebarService.show;\r\n    const classes = useStyles();\r\n    const authService = useDependency(AuthService);\r\n    const history = useHistory();\r\n\r\n    const user = authService.getUser()\r\n\r\n    const handleDrawerToggle = () => {\r\n        sidebarService.toggle();\r\n    }\r\n\r\n    const drawer = (\r\n        <Box\r\n            className={classes.container}\r\n            boxShadow={2}\r\n        >\r\n            <Box>\r\n                <List>\r\n                    <ListItem>\r\n                        <Avatar>{user.charAt(0).toUpperCase()}</Avatar>\r\n                        <Box mx=\"16px\">\r\n                            {user}\r\n                        </Box>\r\n                    </ListItem>\r\n                    <ListItem\r\n                        button\r\n                        onClick={()=>{\r\n                            sidebarService.close();\r\n                            history.push('/booking')\r\n                        }}\r\n                        selected={sidebarService.selected === 'booking'}\r\n                    >\r\n                        <ListItemIcon>\r\n                            <DirectionsBusIcon />\r\n                        </ListItemIcon>\r\n                        <ListItemText primary=\"Bus Bookings\" />\r\n                    </ListItem>\r\n                    <ListItem\r\n                        button\r\n                        onClick={ ()=>{\r\n                            sidebarService.close();\r\n                            history.push('/schedule');\r\n                        }}\r\n                        selected={sidebarService.selected === 'schedule'}\r\n                    >\r\n                        <ListItemIcon>\r\n                            <TodayIcon />\r\n                        </ListItemIcon>\r\n                        <ListItemText primary=\"My Tickets\" />\r\n                    </ListItem>\r\n                    <Divider />\r\n                    <ListItem button onClick={()=>{sidebarService.close(); authService.logout(); history.push('/')}}>\r\n                        <ListItemIcon>\r\n                            <ExitToAppIcon />\r\n                        </ListItemIcon>\r\n                        <ListItemText primary=\"Logout\" />\r\n                    </ListItem>\r\n                </List>\r\n            </Box>\r\n        </Box>\r\n    )\r\n\r\n    return (\r\n        authService.isAuthenticated() &&\r\n        <>\r\n            <Hidden smUp implementation=\"js\">\r\n                <Drawer\r\n                    variant=\"temporary\"\r\n                    anchor={'left'}\r\n                    open={mobileOpen}\r\n                    onClose={handleDrawerToggle}\r\n                    ModalProps={{\r\n                        keepMounted: true,\r\n                    }}\r\n                >\r\n                    {drawer}\r\n                </Drawer>\r\n            </Hidden>\r\n            <Hidden xsDown implementation=\"js\">\r\n                <Box height=\"100%\">\r\n                    {drawer}\r\n                </Box>\r\n            </Hidden>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Sidebar\r\n","import React from 'react';\nimport { ThemeProvider, Box } from '@material-ui/core';\nimport theme from './theme';\nimport Router from './routes/Router';\nimport Appbar from './components/Appbar';\nimport Sidebar from './components/Sidebar';\nimport DependencyProvider from './services/DependencyInjector';\nimport AuthService from './services/AuthService';\nimport { BrowserRouter } from 'react-router-dom';\nimport { SidebarService } from './services/SidebarService';\n\nfunction App() {\n\n  return (\n    <DependencyProvider dependencies={[AuthService, SidebarService]}>\n      <ThemeProvider theme={theme}>\n        <BrowserRouter basename={process.env.PUBLIC_URL}>\n          <Box height=\"100vh\" overflow=\"hidden\">\n            <Appbar />\n            <Box flexDirection=\"row\" height=\"calc(100%)\" display=\"flex\">\n              <Sidebar />\n              <Box flex={1} overflow='auto'>\n                <Router />\n                <Box height=\"64px\"></Box>\n              </Box>\n            </Box>\n          </Box>\n        </BrowserRouter>\n      </ThemeProvider>\n    </DependencyProvider>\n  );\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}